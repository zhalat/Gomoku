pipeline {
    agent any

    options {
       timestamps()
       timeout(time: 2, unit: 'HOURS') // Increased timeout to 2 hours
    }

    parameters {
        booleanParam(name: 'RUN_UT', defaultValue: true, description: 'Run unit tests')
    }

    environment {
        PRJ = "${env.WORKSPACE}"
        DOCKER_IMAGE = 'ginar/android_qt6_img:latest'
    }

    stages {
        stage('Pull Docker Image') {
            steps {
                script {
                    // Check if the Docker image exists locally
                    def imageExists = sh(script: "docker images -q ${env.DOCKER_IMAGE}", returnStdout: true).trim()
                    if (imageExists == "") {
                        echo "Docker image ${env.DOCKER_IMAGE} not found locally. Pulling from Docker Hub..."
                        retry(2) { //try max 2x 
                            sh(script: "docker pull ${env.DOCKER_IMAGE}", returnStdout: true, returnStatus: false).eachLine { line ->
                                echo line
                            }
                        }
                        echo "Docker image ${env.DOCKER_IMAGE} successfully pulled."
                    } else {
                        echo "Docker image ${env.DOCKER_IMAGE} already exists locally. Skipping pull."
                    }

                    //Verify Docker Image
                    def imageVerify = sh(script: "docker images -q ${env.DOCKER_IMAGE}", returnStdout: true).trim()
                    if (imageVerify == "") {
                        error "Docker image ${env.DOCKER_IMAGE} not found after pull. Aborting."
                    } else {
                        echo "Docker image ${env.DOCKER_IMAGE} is available locally."
                    }
                }
            }
        }
        
        stage('Build') {

            agent {
                docker {
                    image "${env.DOCKER_IMAGE}" 
                    // args '''--user zby -e ANDROID_HOME=/home/zby/Android/Sdk 
                    //                    -e PATH=$PATH:/home/zby/Android/Sdk/cmdline-tools/latest/bin:/home/zby/Android/Sdk/platform-tools
                    //                    -e PRJ=${PRJ}''' 
                }
            }

            steps{

                script{
                    sh ''' echo "alamakota"'''
                }
            }

            // steps{
            //     script {
            //         sh '''
            //         #[cmake]

            //         /opt/Qt/Tools/CMake/bin/cmake -S ${PRJ}/a.src/frontend/GUI -B ${PRJ}/a.src/frontend/build_gui -DCMAKE_GENERATOR:STRING="Unix Makefiles" 
            //         -DCMAKE_BUILD_TYPE:STRING=Release  
            //         -DQT_QMAKE_EXECUTABLE:FILEPATH=/opt/Qt/6.6.1/android_armv7/bin/qmake 
            //         -DCMAKE_PREFIX_PATH:PATH=/opt/Qt/6.6.1/android_armv7 
            //         -DCMAKE_C_COMPILER:FILEPATH=/home/zby/Android/Sdk/ndk/25.1.8937393/toolchains/llvm/prebuilt/linux-x86_64/bin/clang 
            //         -DCMAKE_CXX_COMPILER:FILEPATH=/home/zby/Android/Sdk/ndk/25.1.8937393/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++ 
            //         -DANDROID_PLATFORM:STRING=android-23 -DANDROID_NDK:PATH=/home/zby/Android/Sdk/ndk/25.1.8937393 
            //         -DCMAKE_TOOLCHAIN_FILE:FILEPATH=/home/zby/Android/Sdk/ndk/25.1.8937393/build/cmake/android.toolchain.cmake 
            //         -DANDROID_USE_LEGACY_TOOLCHAIN_FILE:BOOL=OFF 
            //         -DANDROID_ABI:STRING=armeabi-v7a 
            //         -DANDROID_STL:STRING=c++_shared 
            //         -DCMAKE_FIND_ROOT_PATH:PATH=/opt/Qt/6.6.1/android_armv7 
            //         -DQT_NO_GLOBAL_APK_TARGET_PART_OF_ALL:BOOL=ON 
            //         -DQT_HOST_PATH:PATH=/opt/Qt/6.6.1/gcc_64 
            //         -DANDROID_SDK_ROOT:PATH=/home/zby/Android/Sdk 
            //         -DProtobuf_DIR:STRING=/home/zby/Android/protobuf-v5.27.0-rc3/lib/cmake/protobuf 
            //         -Dutf8_range_DIR:STRING=/home/zby/Android/protobuf-v5.27.0-rc3/lib/cmake/utf8_range 
            //         -Dabsl_DIR:STRING=/home/zby/Android/abseil/lib/cmake/absl 
            //         -DGTest_DIR:STRING=/home/zby/Android/gtest1.14/lib/cmake/GTest

            //         #[make]
            //         cd ${PRJ}/a.src/frontend/build_gui
            //         make


            //         #[deploy]
            //         "/opt/Qt/6.6.1/gcc_64/bin/androiddeployqt" --input /home/zby/repos/Gomoku/a.src/frontend/build_gui/android-GomokuFree-deployment-settings.json 
            //                                                    --output /home/zby/repos/Gomoku/a.src/frontend/build_gui/android-build 
            //                                                    --android-platform android-34 --jdk /usr/lib/jvm/java-11-openjdk-amd64 --gradle --release
            //         '''
            //     }
            // }

        }

        // Add further stages here as needed
    }
}
